// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model User {
    id        String   @id @default(cuid())
    email     String   @unique
    password  String
    firstName String?
    lastName  String?
    avatar    String?
    role      UserRole @default(USER)
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    // Relations
    receipts   Receipt[]
    invoices   Invoice[]
    categories Category[]
    tags       Tag[]

    @@map("users")
}

model Category {
    id          String   @id @default(cuid())
    name        String
    description String?
    color       String?  @default("#3B82F6")
    userId      String?
    createdAt   DateTime @default(now())
    updatedAt   DateTime @updatedAt

    // Relations
    user     User?     @relation(fields: [userId], references: [id], onDelete: Cascade)
    receipts Receipt[]
    invoices Invoice[]

    @@map("categories")
}

model Tag {
    id        String   @id @default(cuid())
    name      String
    color     String?  @default("#6B7280")
    userId    String?
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    // Relations
    user     User?     @relation(fields: [userId], references: [id], onDelete: Cascade)
    receipts Receipt[]
    invoices Invoice[]

    @@map("tags")
}

model Receipt {
    id            String        @id @default(cuid())
    title         String?
    vendor        String?
    amount        Float
    currency      String        @default("USD")
    date          DateTime
    tax           Float?
    paymentMethod String?
    description   String?
    status        ReceiptStatus @default(VERIFIED)
    fileUrl       String
    fileType      String
    fileSize      Int?
    ocrData       Json? // Raw OCR extracted data
    extractedData Json? // Processed/cleaned data
    userId        String
    categoryId    String?
    createdAt     DateTime      @default(now())
    updatedAt     DateTime      @updatedAt

    // Relations
    user     User      @relation(fields: [userId], references: [id], onDelete: Cascade)
    category Category? @relation(fields: [categoryId], references: [id], onDelete: SetNull)
    tags     Tag[]

    @@map("receipts")
}

model Invoice {
    id            String        @id @default(cuid())
    title         String?
    vendor        String?
    client        String?
    amount        Float
    currency      String        @default("USD")
    date          DateTime
    dueDate       DateTime?
    tax           Float?
    status        InvoiceStatus @default(PENDING)
    description   String?
    fileUrl       String
    fileType      String
    fileSize      Int?
    ocrData       Json? // Raw OCR extracted data
    extractedData Json? // Processed/cleaned data
    userId        String
    categoryId    String?
    createdAt     DateTime      @default(now())
    updatedAt     DateTime      @updatedAt

    // Relations
    user     User      @relation(fields: [userId], references: [id], onDelete: Cascade)
    category Category? @relation(fields: [categoryId], references: [id], onDelete: SetNull)
    tags     Tag[]

    @@map("invoices")
}

enum UserRole {
    USER
    ADMIN
}

enum ReceiptStatus {
    PENDING
    VERIFIED
    DISPUTED
}

enum InvoiceStatus {
    PENDING
    PAID
    OVERDUE
    CANCELLED
}
